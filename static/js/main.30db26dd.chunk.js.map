{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","contacts","useState","name","setName","number","setNumber","e","preventDefault","namesInPhonebook","map","numbersInPhonebook","includes","alert","matchContact","className","s","form","htmlFor","label","type","value","onChange","currentTarget","placeholder","input","button","ContactList","onDeleteContact","id","onClick","Filter","baseContacts","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLocaleLowerCase","contact","getVisibleContacts","contactWithId","shortid","generate","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30db26dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1fuZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2yNc_\",\"button\":\"ContactForm_button__3rCKb\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit, contacts }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const matchContact = () => {\r\n    const namesInPhonebook = contacts.map(({ name }) => name);\r\n    const numbersInPhonebook = contacts.map(({ number }) => number);\r\n\r\n    if (\r\n      namesInPhonebook.includes(name) ||\r\n      numbersInPhonebook.includes(number)\r\n    ) {\r\n      alert(`${name}${number} is already in contacts!!!`);\r\n      return true;\r\n    }\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all fields');\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setName('');\r\n    setNumber('');\r\n\r\n    if (matchContact()) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label htmlFor=\"name\" className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={e => {\r\n            setName(e.currentTarget.value);\r\n          }}\r\n          placeholder=\"Rosie Simpson\"\r\n          className={s.input}\r\n        ></input>\r\n      </label>\r\n\r\n      <label htmlFor=\"number\" className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={e => {\r\n            setNumber(e.currentTarget.value);\r\n          }}\r\n          placeholder=\"459-12-56\"\r\n          className={s.input}\r\n        ></input>\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"Contacts__item\">\r\n          <p className=\"Contacts__text\">\r\n            {name} : {number}\r\n          </p>\r\n\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst baseContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? baseContacts;\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    return localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contactWithId = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts([contactWithId, ...contacts]);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} contacts={contacts} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={e => setFilter(e.currentTarget.value)} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}